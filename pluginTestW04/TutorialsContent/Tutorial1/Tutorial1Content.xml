<?xml version="1.0" encoding="utf-8" ?>
<tutorial>
  <currentStep>1</currentStep>
  
  <intro>
    <Run FontSize="36">Tutorial 1. Essential Shortcuts</Run>
    <LineBreak/>
    <Run  FontSize="14">In this tutorial you will learn a number of essential ReSharper shortcuts that you will probably use most often in your day-to-day work. The goal of this tutorial is only to give you a "taste" of ReSharper. All these shortcuts will be covered in next tutorials in more details.</Run>
  </intro>

  <steps>
    <step li="1" project="Tutorial1_EssentialShortcuts" file="1-AltEnter.cs" type="Tutorial1_EssentialShortcuts.badlyNamedClass" Action="next">
      <text>
        <Run FontSize="20">Alt+Enter</Run> <LineBreak/>
        Used to apply quick fixes to inspections ("squigglies"), or apply context specific actions, depending on location of text caret. Also allows searching and applying all ReSharper commands direct from the menu. <LineBreak/>
        Icon is displayed in gutter margin on left of editor, e.g. yellow lightbulb to fix warning, red light bulb to fix error, hammer to context action, etc.
      </text>
    </step>
    
    <step li="2" project="Tutorial1_EssentialShortcuts" file="1-AltEnter.cs" type="Tutorial1_EssentialShortcuts.badlyNamedClass" Action="next">
      <text>
        <Run FontSize="20">Apply QuickFix for an inspection</Run><LineBreak/><LineBreak/>
        The <Run FontFamily="Consolas">badlyNamedClass</Run> class doesn't match ReSharper's naming style! Let's fix this:<LineBreak/>
        1. Place text caret on "squiggly". Note the lightbulb in the margin on the left.<LineBreak/>
        2. Click the light bulb, or hit <Bold>Alt+Enter</Bold>.<LineBreak/>
        3. Select <Bold>Rename to 'BadlyNamedClass'</Bold> to apply the fix.<LineBreak/>
      </text>
    </step>

    <step li="3" project="Tutorial1_EssentialShortcuts" file="1-AltEnter.cs" type="Tutorial1_EssentialShortcuts.ContextAction" method="FormatString" textToFind="arg" textToFindOccurrence ="2" Action="next">
      <text>
        <Run FontSize="20">Apply context action</Run><LineBreak/><LineBreak/>
        1. Place text caret on <Run FontFamily="Consolas">arg</Run>. Note the hammer action - a context action is available.<LineBreak/>
        2. Hit <Bold>Alt+Enter</Bold>.<LineBreak/>
        3. Select <Bold>To String.Format invocation</Bold>.<LineBreak/>
      </text>
    </step>

    <step li="4" project="Tutorial1_EssentialShortcuts" file="1-AltEnter.cs" type="Tutorial1_EssentialShortcuts.GoToAction" Action="next">
      <text>
        <Run FontSize="20">Go to action</Run><LineBreak/><LineBreak/>
        1. Place caret on <Run FontFamily="Consolas">GoToAction</Run> class name.<LineBreak/>
        2. Hit <Bold>Alt+Enter</Bold>. Note the magnifying glass.<LineBreak/>
        3. Start typing "rename".<LineBreak/>
      </text>
    </step>

    <step li="5" project="Tutorial1_EssentialShortcuts" file="2-ContextualMenus.cs" type="Tutorial1_EssentialShortcuts.NavigateTo" Action="next">
      <text>
        <Run FontSize="20">Navigate To menu</Run><LineBreak/><LineBreak/>
        Displays a contextual menu of options you can use to navigate to from your current location.<LineBreak/> 
        It's a very useful way of navigating without having to learn ALL of the shortcuts!<LineBreak/>
        1. Place text caret on the <Run FontFamily="Consolas">NavigateTo</Run> class name.<LineBreak/>
        2. Hit <Bold>Alt+`</Bold> (VS) or <Bold>Ctrl+Shift+G</Bold> (IntelliJ).<LineBreak/>
      </text>
    </step>
    
      <step li="6" project="Tutorial1_EssentialShortcuts" file="2-ContextualMenus.cs" type="Tutorial1_EssentialShortcuts.NavigateTo" Action="next">
      <text>
        <Run FontSize="20">List of all possible actions</Run><LineBreak/><LineBreak/>
        1. Place text caret on the <Run FontFamily="Consolas">NavigateTo</Run> class name.<LineBreak/>
        2. Hit <Bold>Alt+Enter</Bold>.<LineBreak/>
        3. Start typying action name. E.g., "navigate".<LineBreak/>
      </text>
    </step>
    
    <step li="7" project="Tutorial1_EssentialShortcuts" file="2-ContextualMenus.cs" type="Tutorial1_EssentialShortcuts.RefactorThis" Action="next">
      <text>
        <Run FontSize="20">Refactor This menu</Run><LineBreak/><LineBreak/>
        Displays a contextual menu of options for refactoring available at the current location.<LineBreak/> 
        It's very useful for invoking refactorings without requiring to know ALL shortcuts!<LineBreak/>
        1. Place text caret on the <Run FontFamily="Consolas">RefactorThis</Run> class name.<LineBreak/>
        2. Hit <Bold>Ctrl+Shift+R</Bold> (VS and IntelliJ).<LineBreak/>
        3. Select <Bold>Rename</Bold> and rename the class.<LineBreak/>
      </text>
    </step>
    
    <step li="8" project="Tutorial1_EssentialShortcuts" file="2-ContextualMenus.cs" type="Tutorial1_EssentialShortcuts.GenerateCode" Action="next">
      <text>
        <Run FontSize="20">Generate Code menu</Run><LineBreak/><LineBreak/>
        Displays a contextual menu of options for generating code available at the current location.<LineBreak/> 
        It's very useful for invoking refactorings without requiring to know ALL shortcuts!<LineBreak/>
        1. Place text caret on the <Run FontFamily="Consolas">GenerateCode</Run> class name or inside the class.<LineBreak/>
        2. Hit <Bold>Alt+Insert</Bold> (VS and IntelliJ).<LineBreak/>
        3. Select code block you want to add to the class.<LineBreak/>
        This feature is covered in more details in next tutorials.
      </text>
    </step>
    
    <step li="9" project="Tutorial1_EssentialShortcuts" file="2-ContextualMenus.cs" type="Tutorial1_EssentialShortcuts.InspectThis" Action="next">
      <text>
        <Run FontSize="20">Inspect This menu</Run><LineBreak/><LineBreak/>
        Displays a contextual menu of options for analysing code and control flow available at the current location.<LineBreak/> 
        It's very useful for invoking value analysis without requiring to know ALL shortcuts!<LineBreak/>
        1. Place text caret on the <Run FontFamily="Consolas">InspectThis</Run> class name.<LineBreak/>
        2. Hit <Bold>Ctrl+Shift+Alt+A</Bold> (VS and IntelliJ).<LineBreak/>
        This feature is covered in more details in next tutorials.
      </text>
    </step>
    
    <step li="10" project="Tutorial1_EssentialShortcuts" file="2-ContextualMenus.cs" type="Tutorial1_EssentialShortcuts.InspectThis" Action="next">
      <text>
        <Run FontSize="20">That's All!</Run><LineBreak/><LineBreak/>
        Thanks for passing the tutorial. Now you can proceed to the next tutorial that will show you ReSharper navigation tricks.
      </text>
    </step>
    
    
    
  </steps>
  
</tutorial>

<?xml version="1.0" encoding="utf-8" ?>
<tutorial>
  <currentStep>1</currentStep>
  
  <intro>
    <Run FontSize="36">Tutorial 1. Essential Shortcuts</Run>
    <LineBreak/>
    <Run  FontSize="14">In this tutorial you will learn a number of essential ReSharper shortcuts that you will probably use most often in your day-to-day work. The goal of this tutorial is only to give you a "taste" of ReSharper. All these shortcuts will be covered in next tutorials in more details.</Run>
  </intro>

  <steps>
    <step li="1" project="Tutorial1_EssentialShortcuts" file="Essentials.cs" type="Tutorial1_EssentialShortcuts.badlyNamedClass">
      <text>
        <Run FontSize="20">Alt+Enter</Run> <LineBreak/>
        Used to apply quick fixes to inspections ("squigglies"), or apply context specific actions, depending on location of text caret. Also allows searching and applying all ReSharper commands direct from the menu. <LineBreak/>
        Icon is displayed in gutter margin on left of editor, e.g. yellow lightbulb to fix warning, red light bulb to fix error, hammer to context action, etc.
      </text>
    </step>
    
    <step li="2" project="Tutorial1_EssentialShortcuts" file="Essentials.cs" type="Tutorial1_EssentialShortcuts.badlyNamedClass" action="ReSharper_AltEnter" check="CheckTutorial1Step2" nextStep="Auto">
      <text>
        <Run FontSize="20">Apply QuickFix for an inspection</Run><LineBreak/><LineBreak/>
        The <Run FontFamily="Consolas">badlyNamedClass</Run> class doesn't match ReSharper's naming style! Let's fix this:<LineBreak/>
        1. Place text caret on "squiggly". Note the lightbulb in the margin on the left.<LineBreak/>
        2. Click the light bulb, or hit <Bold>Alt+Enter</Bold>.<LineBreak/>
        3. Select <Bold>Rename to 'BadlyNamedClass'</Bold> to apply the fix.<LineBreak/>
      </text>
    </step>

    <step li="3" project="Tutorial1_EssentialShortcuts" file="Essentials.cs" type="Tutorial1_EssentialShortcuts.ContextAction" method="FormatString" textToFind="arg" textToFindOccurrence ="2" action="ReSharper_AltEnter" check="CheckTutorial1Step3" nextStep="Auto">
      <text>
        <Run FontSize="20">Apply context action</Run><LineBreak/><LineBreak/>
        1. Place text caret on <Run FontFamily="Consolas">arg</Run>. Note the hammer action - a context action is available.<LineBreak/>
        2. Hit <Bold>Alt+Enter</Bold>.<LineBreak/>
        3. Select <Bold>To String.Format invocation</Bold>.<LineBreak/>
      </text>
    </step>

    <step li="4" project="Tutorial1_EssentialShortcuts" file="Essentials.cs" type="Tutorial1_EssentialShortcuts.GoToAction" action="ReSharper_AltEnter" check="CheckTutorial1Step4" nextStep="Auto">
      <text>
        <Run FontSize="20">Go to action</Run><LineBreak/><LineBreak/>
        1. Place caret on <Run FontFamily="Consolas">GoToAction</Run> class name.<LineBreak/>
        2. Hit <Bold>Alt+Enter</Bold>. Note the magnifying glass.<LineBreak/>
        3. Start typing "rename".<LineBreak/>
        4. Rename the class to <Run FontFamily="Consolas">Renamed</Run>.
      </text>
    </step>

    <step li="5" project="Tutorial1_EssentialShortcuts" file="Essentials.cs" type="Tutorial1_EssentialShortcuts.BadlyNamedClass" textToFind="SomeClass" textToFindOccurrence ="1" action="ReSharper.ReSharper_GotoDeclaration" check="CheckTutorial1Step5" nextStep="Auto">
      <text>
        <Run FontSize="20">Go To Declaration</Run><LineBreak/><LineBreak/>
        Say, we want to take a look at the <Run FontFamily="Consolas">SomeClass</Run> declaration.<LineBreak/>         
        1. Place text caret on the <Run FontFamily="Consolas">SomeClass</Run> in the field declaration.<LineBreak/>
        2. Hit <Bold>Ctrl + B</Bold> (VS) to navigate to type declaration.<LineBreak/>
      </text>
    </step>          
    
    <step li="6" project="Tutorial1_EssentialShortcuts" file="Essentials.cs" >
      <text>
        <Run FontSize="20">That's All!</Run><LineBreak/><LineBreak/>
        Thanks for passing the tutorial. Now you can proceed to the next tutorial that will show you ReSharper navigation tricks.
      </text>
    </step>
    
    
    
  </steps>
  
</tutorial>
